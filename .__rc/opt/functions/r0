#!/bin/bash

####
## r0()
## usage: Change directory to one of the available repositories on local machine.
####

_r0_comp() {
  local cur prev opts
  local PATH_TO_REPOS="$HOME/Repos"

  COMPREPLY=()

  cur="${COMP_WORDS[COMP_CWORD]}";
  prev="${COMP_WORDS[COMP_CWORD - 1]}";
  opts="$(ls $PATH_TO_REPOS)"

  COMPREPLY=($(compgen -W "${opts}" -- "${cur}"))
  return 0

}

complete -F _r0_comp r0

r0() {
  local PATH_TO_REPOS="$HOME/Repos"
  local NAME_OF_REPO=""

  local GREEN="\e[32m";
  local RED="\e[31m";
  local NORMAL="\e[0m";
  echo "hello ${testing}"

  is_valid() {
    [[ $NAME_OF_REPO =~ ^[a-zA-Z0-9_-]+$ ]] && found_repo $NAME_OF_REPO
  };

  list() {
    ls $PATH_TO_REPOS
  }

  found_repo() {
   if [[ -d $PATH_TO_REPOS/$NAME_OF_REPO ]];then
     cd $PATH_TO_REPOS/$NAME_OF_REPO
   else
     echo "$PATH_TO_REPOS/$NAME_OF_REPO was not found"
   fi
  }

  usage() {
      echo -e "${GREEN}Usage:${NORMAL}"
      echo -e "r0 [-l| --list] [-h| --help] <repo-name>\n"
      echo -e "Options:"
      echo -e "-l, --list List Available Repositories\n"
      echo -e "-h, --help Prints usage"
    }

  handle_no_args() {
    echo "no ags"
    return 0
  }

  local VALID_ARGS=$(getopt -o lh: --long list,help: -- "$@")

  eval set -- "$VALID_ARGS"
  while [ : ]; do
    case "$1" in
      -l | --list)
        list
        shift;
        return 1
        ;;
      -h | --help)
        shift
        return 1
        ;;
      --)
        echo $testing || "testing is unset"
        NAME_OF_REPO=$2
        shift;
        break
        ;;
    esac

  done

  [[ -n $NAME_OF_REPO ]] && is_valid $NAME_OF_REPO || handle_no_args
}
